# 「関数の構文」練習問題


##論理演算

論理演算の関数をパターンマッチを使って実装してみよう。

~~~ {.haskell}
myNot :: Bool -> Bool
myAnd :: Bool -> Bool -> Bool
myOr  :: Bool -> Bool -> Bool
myXor :: Bool -> Bool -> Bool
~~~

実行例

~~~ {.haskell}
ghci> myNot True
False
ghci> myOr False True
True
~~~

* * * * *

## うるう年

うるう年を判定する関数を書いてみよう。

- 西暦年が4で割り切れる年はうるう年
- ただし、西暦年が100で割り切れる年はうるう年でない
- ただし、西暦年が400で割り切れる年はうるう年


~~~ {.haskell}
isLeap :: Int -> Bool
~~~

実行例


~~~ {.haskell}
ghci> isLeap 1999
False
ghci> isLeap 2000
True
~~~

* * * * *

## FizzBuzz

FizzBuzz関数を実装してみよう。

~~~ {.haskell}
fizzBuzz :: Int -> String
~~~

実行例

~~~ {.haskell}
ghci> fizzBuzz 2
"2"
ghci> fizzBuzz 3
"Fizz"
ghci> fizzBuzz 4
"4"
ghci> fizzBuzz 5
"Buzz"
~~~

ヒント： IntをStringに変換するには show関数を使います。

* * * * *

## caseとifを使わない

次の関数からcaseとifを取り除いてみましょう。

~~~ {.haskell}
analysisLine :: String -> String
analysisLine s = 
  case s of [] -> "empty"
            [_] -> "a character"
            s' -> if last s' == '.' 
                  then "a sentence"
                  else if ' ' `elem` s' 
                       then "some words"
                       else "a word"
~~~

ヒント: パターンマッチとガードを使います。


* * * * *
## シーザー暗号

与えられた文字列をシーザー暗号で暗号化する関数を作成しよう。

~~~ {.haskell}
caesar :: Int        -- 何文字右へずらすか
       -> String     -- 暗号化する文字列
       -> String     -- 暗号化された文字列
~~~

- a～z の文字は、指定された数だけ右へずらす
- A～Z の文字は、指定された数だけ右へずらす
- それ以外の文字や記号や空白は、ずらさない

実行例


~~~ {.haskell}
ghci> caesar 1 "Hello, world!"
"Ifnmp, xpsme"
ghci> caesar 10 "(^o^) <`v`> ['-'] {~<~} |T_T|"
"(^y^) <`f`> ['-'] {~<~} |D_D|"
~~~

上の関数を使って、以下のシーザー暗号を解読できますか。

~~~
Par Yngvmbhgte Ikhzktffbgz Ftmmxkl
~~~

短い文字数でかけたら、あなごるに投稿しよう。

[Caesar cipher - anarchy golf](http://golf.shinh.org/p.rb?Caesar+cipher)


* * * * *

## パターンマッチの網羅

以下のソースコードをGHCiに読み込んでみて、警告がでるかどうか試してみましょう。 (p.37)

~~~ {.haskell}
{-# OPTIONS -Wall -Werror #-}

charName :: Char -> String
charName 'a' = "Albert"
charName 'b' = "Broseph"
charName 'c' = "Cecil"
~~~

警告がなくなるようにcharName関数を修正しましょう。

* * * * *

6. ここに問題を追加





# 練習問題リンク集

- [スタートHaskell 2011 関数定義 練習問題](https://github.com/yuzutechnology/Community-StartHaskell2011/blob/master/exercises/chapter04/Chapter04-ja.md)
# 『Hello 再帰！』　練習問題

## リストの長さ

リストの長さを返す関数を、再帰を使って自分で書いてみよう。

~~~ {.haskell}
myLength   :: [a] -> Int
~~~

* * * * *
## 総和と総積

リストの要素を全部足す関数と、全部かける関数を、再帰を使って書いてみよう。

~~~ {.haskell}
mySum      :: [Int] -> Int
myProduct  :: [Int] -> Int
~~~

実行例

~~~ {.haskell}
ghci> mySum [1,2,3,4]
10
ghci> myProduct [1,2,3,4]
24
~~~

* * * * *
## 偶数と奇数にわける

整数のリストを受け取って、奇数だけのリストと偶数だけのリストに分ける関数を、再帰を使って書いてみよう。

~~~ {.haskell}
oddEven :: [Int] -> ([Int],[Int])
~~~

実行例

~~~ {.haskell}
ghci> oddEven [1,4,5,6,7,10,11]
([1,5,7,11], [4,6,10])
~~~

* * * * *
## 等比数列

等比数列を生成する関数を作ろう。

~~~ {.haskell}
gp :: Num a => a      -- 初項
            -> a      -- 公比
            -> [a]    -- 等比数列（無限）
~~~

実行例


~~~ {.haskell}
ghci> take 6 (gp 1 2)
[1,2,4,8,16,32]
~~~

# 練習問題リンク集

- [スタートHaskell 2011 関数定義 練習問題](https://github.com/yuzutechnology/Community-StartHaskell2011/blob/master/exercises/chapter04/Chapter04-ja.md)
- [スタートHaskell 2011 再帰関数 練習問題](https://github.com/yuzutechnology/Community-StartHaskell2011/blob/master/exercises/chapter06/Chapter06-ja.md)
